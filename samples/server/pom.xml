<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.oasp.java.dev</groupId>
    <artifactId>oasp4j-samples</artifactId>
    <version>dev-SNAPSHOT</version>
  </parent>
  <groupId>io.oasp.java.samples</groupId>
  <artifactId>oasp4j-sample-server</artifactId>
  <packaging>war</packaging>
  <name>${project.artifactId}</name>
  <description>Server for the restaurant application - a simple example using the Open Application Standard Platform for Java (OASP4J).</description>

  <properties>
    <java.version>1.7</java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-batch</artifactId>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-beanmapping</artifactId>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-security</artifactId>
    </dependency>


    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-rest</artifactId>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-basic</artifactId>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-jpa-envers</artifactId>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-web</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- for SpringDispatcher Servlet -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <!-- for HttpInvoker -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <!-- JSP -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>

    <!-- Spring Security -->
    <!--
      <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      </dependency>

      <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      </dependency>
    -->

    <!-- for Object Relational Mapping (JPA/Hibernate) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>

    <!-- Hibernate EntityManager for JPA (implementation) -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <!-- CXF for REST and Webservices -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <exclusions>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-service-description</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>

    <!-- Web Sockets -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-websocket</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-messaging</artifactId>
    </dependency>

    <!-- Tests -->
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.oasp.java.modules</groupId>
      <artifactId>oasp4j-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.10.4</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-ws</artifactId>
    </dependency>

    <dependency>
      <groupId>com.mysema.querydsl</groupId>
      <artifactId>querydsl-apt</artifactId>
      <version>3.4.3</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.mysema.querydsl</groupId>
      <artifactId>querydsl-jpa</artifactId>
      <version>3.7.1</version>
    </dependency>

    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>1.3.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>jsclient</id>
      <activation>
        <!--<activeByDefault>true</activeByDefault> -->
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <!-- NB! Set <version> to the latest released version of frontend-maven-plugin, like in README.md -->
            <version>1.4</version>
            <executions>
              <execution>
                <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                <id>install node and npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <!-- optional: default phase is "generate-resources" -->
                <phase>generate-resources</phase>
                <configuration>
                  <installDirectory>C:\Users\jmolinar\Downloads\node</installDirectory>
                </configuration>
              </execution>

              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>

                <!-- optional: default phase is "generate-resources" -->
                <phase>generate-resources</phase>

                <configuration>
                  <!-- optional: The default argument is actually
                    "install", so unless you need to run some other npm command,
                    you can remove this whole <configuration> section.
                  -->
                  <arguments>install bower</arguments>
                </configuration>
              </execution>
              <execution>
                <id>bower install</id>
                <goals>
                  <goal>bower</goal>
                </goals>

                <configuration>
                  <!-- optional: The default argument is actually
                    "install", so unless you need to run some other bower command,
                    you can remove this whole <configuration> section.
                  -->
                  <arguments>install</arguments>
                </configuration>
              </execution>
              <execution>
                <id>gulp clean</id>
                <goals>
                  <goal>gulp</goal>
                </goals>

                <!-- optional: the default phase is "generate-resources" -->
                <phase>generate-resources</phase>

                <configuration>
                  <!-- optional: if not specified, it will run gulp's default
                    task (and you can remove this whole <configuration> section.) -->
                  <argument>clean</argument>
                </configuration>
              </execution>
              <execution>
                <id>gulp build</id>
                <goals>
                  <goal>gulp</goal>
                </goals>

                <!-- optional: the default phase is "generate-resources" -->
                <phase>generate-resources</phase>

                <configuration>
                  <!-- optional: if not specified, it will run gulp's default
                    task (and you can remove this whole <configuration> section.) -->
                  <argument>build:dist</argument>
                </configuration>
              </execution>
              <execution>
                <id>gulp test</id>
                <goals>
                  <goal>gulp</goal>
                </goals>

                <!-- optional: the default phase is "generate-resources" -->
                <phase>test</phase>

                <configuration>
                  <!-- optional: if not specified, it will run gulp's default
                    task (and you can remove this whole <configuration> section.) -->
                  <argument>test</argument>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <nodeVersion>v7.9.0</nodeVersion>
              <yarnVersion>v0.24.3</yarnVersion>
              <workingDirectory>${js.client.dir}</workingDirectory>
              <nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
              <npmDownloadRoot>http://registry.npmjs.org/npm/-/</npmDownloadRoot>

            </configuration>
          </plugin>
          <!-- <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
            <execution>
            <id>npm-install</id>
            <phase>generate-sources</phase>
            <goals>
            <goal>exec</goal>
            </goals>
            <configuration>
            <executable>npm</executable>
            <arguments>
            <argument>install</argument>
            </arguments>
            <workingDirectory>${js.client.dir}</workingDirectory>
            </configuration>
            </execution>
            <execution>
            <id>gulp-clean</id>
            <phase>generate-sources</phase>
            <goals>
            <goal>exec</goal>
            </goals>
            <configuration>
            <executable>gulp</executable>
            <arguments>
            <argument>clean</argument>
            </arguments>
            <workingDirectory>${js.client.dir}</workingDirectory>
            </configuration>
            </execution>
            <execution>
            <id>gulp-build</id>
            <phase>generate-sources</phase>
            <goals>
            <goal>exec</goal>
            </goals>
            <configuration>
            <executable>gulp</executable>
            <arguments>
            <argument>build:dist</argument>
            </arguments>
            <workingDirectory>${js.client.dir}</workingDirectory>
            </configuration>
            </execution>
            <execution>
            <id>gulp-test</id>
            <phase>test</phase>
            <goals>
            <goal>exec</goal>
            </goals>
            <configuration>
            <executable>gulp</executable>
            <arguments>
            <argument>test</argument>
            </arguments>
            <workingDirectory>${js.client.dir}</workingDirectory>
            </configuration>
            </execution>
            </executions>
            </plugin> -->
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <!-- From core -->
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${js.client.dir}/dist</directory>
        <targetPath>static</targetPath>
      </resource>
    </resources>
    <plugins>
      <!-- From core -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>config/application.properties</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>io.oasp.gastronomy.restaurant.SpringBootApp</mainClass>
          <classifier>bootified</classifier>
          <finalName>${project.artifactId}</finalName>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
